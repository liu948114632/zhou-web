user root  ;
worker_processes  auto;
worker_cpu_affinity auto;

events {
  worker_connections  25624;
}

http {
  include       mime.types;
  default_type  application/octet-stream;

  log_format main '$remote_addr - $remote_user [$time_local] "$request" '
  '$status $body_bytes_sent "$http_referer" '
  '"$http_user_agent" "$http_x_forwarded_for" '
  '$connection $upstream_addr '
  '$upstream_response_time $request_time';

  access_log  logs/access.log  main;

  sendfile        on;
  tcp_nopush     on;

  server_tokens off;
  #keepalive_timeout  0;
  keepalive_timeout  65;

  gzip  on;
  gzip_min_length 1000;
  gzip_http_version 1.1;
  gzip_vary on;
  gzip_types text/plain text/css image/jpeg image/gif image/png application/javascript application/json;

  lua_package_path "$prefix/lualib/?.lua;$prefix/lua/?.lua";

  #server_tag nginx;
  fastcgi_intercept_errors on;

  lua_shared_dict cache 100m;

  upstream zhgtrade_server {
    server 127.0.0.1:8889;
    keepalive 60;
  }

  upstream push_server {
    server 127.0.0.1:9092;
    keepalive 60;
  }

  #map $http_upgrade $connection_upgrade {
  #  default upgrade;
  #  ''      close;
  #}

  #server {
  #  listen       80;
  #  server_name  bilaxy.com www.bilaxy.com;
  #  rewrite ^ https://$http_host$request_uri? permanent;    # force redirect http to https
  #}

  server {
    listen       80;
    server_name  bilaxy.com www.bilaxy.com;
    default_type text/html;
    #lua_code_cache off;
    #ssl on;
    #ssl_certificate   cert/214362055340725.pem;
    #ssl_certificate_key  cert/214362055340725.key;
    #ssl_session_timeout 5m;
    #ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
    #ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    #ssl_prefer_server_ciphers on;

    location / {
      rewrite_by_lua_file lua/mobile.lua;
      access_by_lua_file lua/waf.lua;
      resolver 8.8.8.8;
      root lua;
      set $env "production";
      content_by_lua_file lua/controller.lua;
    }

    location ~^/dist/|^/favicon.ico {
      root app;
    }
    location ~ ^/app|^/build/|^/lang/{
        access_by_lua_file lua/waf.lua;
        resolver 8.8.8.8;
        set_by_lua $x_forwarded_for '
        local ip = ngx.req.get_headers()["x_forwarded_for"]
        if not ip then
        ip = ngx.var.remote_addr
        else
        ip = string.gsub(ip,",.*", "")
        end
        return ip
        ';
        proxy_set_header X-Real-IP $x_forwarded_for;
        #proxy_set_header X-external "external";
        proxy_set_header Host $http_host;
        proxy_connect_timeout 3;
        proxy_pass http://127.0.0.1:886;
    }

    location ~ ^/api/{
      #access_by_lua_file lua/waf.lua;
      resolver 8.8.8.8;
      set_by_lua $x_forwarded_for '
      local ip = ngx.req.get_headers()["x_forwarded_for"]
      if not ip then
      ip = ngx.var.remote_addr
      else
      ip = string.gsub(ip,",.*", "")
      end
      return ip
      ';
      client_max_body_size 100m;
      client_body_buffer_size 128k;
      proxy_connect_timeout 600;
      proxy_send_timeout 600;
      proxy_read_timeout 600;
      proxy_buffer_size 4k;
      proxy_buffers 32 4k;
      proxy_busy_buffers_size 64k;
      proxy_http_version 1.1;
      proxy_set_header Connection "";
      proxy_set_header X-Real-IP $x_forwarded_for;
      #proxy_set_header X-external "external";
      proxy_set_header Host $http_host;
      proxy_pass http://zhgtrade_server;
    }

    location /socket.io {
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_http_version 1.1;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $host;
      proxy_pass http://push_server;
    }

    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
      root   html;
    }

  }


  server {
    listen       80;
    server_name  admin.bilaxy.com;

    location / {
      access_log logs/admin.log main;
      set_by_lua $x_forwarded_for '
      local ip = ngx.req.get_headers()["x_forwarded_for"]
      if not ip then
      ip = ngx.var.remote_addr
      else
      ip = string.gsub(ip, ",.*", "")
      end
      return ip
      ';
      proxy_set_header X-Real-IP $x_forwarded_for;
      proxy_set_header Host $http_host;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      client_max_body_size 100m;
      client_body_buffer_size 128k;
      proxy_connect_timeout 600;
      proxy_send_timeout 600;
      proxy_read_timeout 600;
      proxy_buffer_size 4k;
      proxy_buffers 32 4k;
      proxy_busy_buffers_size 64k;
      proxy_pass http://127.0.0.1:8080;
      index ssadmin/plj32_dsjds23.html;
    }

    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
      root   html;
    }

  }
}
